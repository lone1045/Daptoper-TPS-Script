local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\53\63","\60\27\17\89\80\36"),function(v42) if (v9(v42,2)==79) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,1,1));return "";end end else local v103=0;local v104;while true do if (v103==0) then v104=v10(v8(v42,16));if v30 then local v123=0;local v124;while true do if (v123==0) then v124=v13(v104,v30);v30=nil;v123=1;end if (1==v123) then return v124;end end else return v104;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v105=0;local v106;while true do if (0==v105) then v106=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + (2 -1))) ;return v106-(v106%1) ;end end else local v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (0==v48) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=v34();local v57=v34();local v58=2 -1 ;local v59=(v31(v57,1,20) * (2^32)) + v56 ;local v60=v31(v57,21,31);local v61=((v31(v57,32)==1) and  -1) or 1 ;if (v60==0) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0 -0 ;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63=0;local v64;local v65;while true do if (3==v63) then return v14(v65);end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==2) then v65={};for v110=1, #v64 do v65[v110]=v10(v9(v11(v64,v110,v110)));end v63=3;end if (v63==0) then v64=nil;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=0;local v81;local v82;while true do if (v80==0) then v81=v32();v82=nil;v80=1;end if (1==v80) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v71[v79]=v82;break;end end end v69[3]=v32();for v83=1,v34() do local v84=0;local v85;while true do if (v84==0) then v85=v32();if (v31(v85,1,1)==0) then local v119=0;local v120;local v121;local v122;while true do if (v119==0) then v120=v31(v85,2,3);v121=v31(v85,4,6);v119=1;end if (1==v119) then v122={v33(),v33(),nil,nil};if (v120==0) then local v126=0;while true do if (v126==0) then v122[3]=v33();v122[572 -(367 + 201) ]=v33();break;end end elseif (v120==1) then v122[3]=v34();elseif (v120==2) then v122[3]=v34() -((929 -(214 + 713))^16) ;elseif (v120==3) then v122[3]=v34() -(2^16) ;v122[4]=v33();end v119=2;end if (v119==3) then if (v31(v121,3,3)==1) then v122[4]=v71[v122[4]];end v66[v83]=v122;break;end if (v119==2) then if (v31(v121,1 + 0 ,1)==1) then v122[2]=v71[v122[2]];end if (v31(v121,2,2)==1) then v122[1 + 2 ]=v71[v122[3]];end v119=3;end end end break;end end end for v86=1,v34() do v67[v86-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[878 -(282 + 595) ];local v77=v73[2];local v78=v73[3];return function(...) local v88=v76;local v89=v77;local v90=v78;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v108=0,v96 do if (v108>=v90) then v94[v108-v90 ]=v95[v108 + 1 ];else v98[v108]=v95[v108 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v109=0;while true do if (v109==0) then v100=v88[v92];v101=v100[1];v109=1;end if (1==v109) then if (v101<=(1678 -(1523 + 114))) then if (v101<=(18 + 2)) then if (v101<=9) then if (v101<=4) then if (v101<=1) then if (v101==0) then v98[v100[2]][v98[v100[3]]]=v100[4];else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=2) then v98[v100[2]][v100[3]]=v100[4];elseif (v101==3) then v98[v100[2]]=v100[3] + v98[v100[5 -1 ]] ;elseif v98[v100[1067 -(68 + 997) ]] then v92=v92 + 1 ;else v92=v100[1273 -(226 + 1044) ];end elseif (v101<=6) then if (v101==5) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else local v146=v100[2];v98[v146]=v98[v146](v21(v98,v146 + 1 ,v100[3]));end elseif (v101<=7) then local v148=v100[2];v98[v148](v98[v148 + (4 -3) ]);elseif (v101==8) then local v221=0;local v222;local v223;local v224;local v225;while true do if (v221==2) then for v394=v222,v93 do local v395=0;while true do if (v395==0) then v225=v225 + 1 ;v98[v394]=v223[v225];break;end end end break;end if (v221==1) then v93=(v224 + v222) -1 ;v225=0;v221=2;end if (0==v221) then v222=v100[2];v223,v224=v91(v98[v222](v21(v98,v222 + (118 -(32 + 85)) ,v93)));v221=1;end end else v98[v100[2 + 0 ]][v98[v100[1 + 2 ]]]=v98[v100[4]];end elseif (v101<=(971 -(892 + 65))) then if (v101<=11) then if (v101>10) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=12) then v98[v100[2]]();elseif (v101>13) then local v230=0;local v231;while true do if (v230==0) then v231=v100[2];do return v98[v231](v21(v98,v231 + 1 ,v100[3]));end break;end end else local v232=v100[2];v98[v232](v21(v98,v232 + 1 ,v93));end elseif (v101<=17) then if (v101<=15) then do return;end elseif (v101==16) then local v233=0;local v234;while true do if (0==v233) then v234=v100[2];do return v98[v234](v21(v98,v234 + 1 ,v100[3]));end break;end end else v98[v100[2]][v98[v100[3]]]=v98[v100[4]];end elseif (v101<=18) then if (v98[v100[2]]~=v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==19) then local v238=0;local v239;local v240;local v241;while true do if (v238==1) then v241=0 -0 ;for v396=v239,v100[4] do local v397=0;while true do if (v397==0) then v241=v241 + (1 -0) ;v98[v396]=v240[v241];break;end end end break;end if (v238==0) then v239=v100[4 -2 ];v240={v98[v239](v21(v98,v239 + 1 ,v93))};v238=1;end end else local v242=0;local v243;local v244;local v245;while true do if (v242==1) then v245=v98[v243 + (352 -(87 + 263)) ];if (v245>0) then if (v244>v98[v243 + 1 ]) then v92=v100[183 -(67 + 113) ];else v98[v243 + 3 ]=v244;end elseif (v244<v98[v243 + 1 ]) then v92=v100[3];else v98[v243 + 3 ]=v244;end break;end if (v242==0) then v243=v100[2];v244=v98[v243];v242=1;end end end elseif (v101<=30) then if (v101<=(19 + 6)) then if (v101<=22) then if (v101==21) then v98[v100[4 -2 ]]=v74[v100[3]];else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=23) then v98[v100[2]]=v98[v100[3]] + v100[4] ;elseif (v101>24) then local v246=v100[2 + 0 ];local v247=v98[v100[3]];v98[v246 + 1 ]=v247;v98[v246]=v247[v100[15 -11 ]];else v98[v100[2]][v100[3]]=v98[v100[4]];end elseif (v101<=27) then if (v101==26) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else local v154=0;local v155;local v156;local v157;while true do if (v154==0) then v155=v100[2];v156=v98[v155 + 2 ];v154=1;end if (2==v154) then if (v156>0) then if (v157<=v98[v155 + 1 ]) then local v412=0;while true do if (0==v412) then v92=v100[3];v98[v155 + 3 ]=v157;break;end end end elseif (v157>=v98[v155 + 1 ]) then local v413=0;while true do if (v413==0) then v92=v100[3];v98[v155 + 3 ]=v157;break;end end end break;end if (v154==1) then v157=v98[v155] + v156 ;v98[v155]=v157;v154=2;end end end elseif (v101<=28) then v98[v100[954 -(802 + 150) ]]=v98[v100[3]]%v100[4] ;elseif (v101>29) then v98[v100[2]]=v75[v100[3]];elseif (v98[v100[2]]==v100[10 -6 ]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=35) then if (v101<=(57 -25)) then if (v101>31) then v98[v100[2]][v98[v100[3]]]=v100[4];else v98[v100[2]]=v100[3];end elseif (v101<=33) then v98[v100[2]][v100[3]]=v100[4];elseif (v101==34) then local v256=0;local v257;while true do if (v256==0) then v257=v100[2];do return v21(v98,v257,v93);end break;end end else local v258=0;local v259;local v260;local v261;while true do if (v258==0) then v259=v100[2];v260=v98[v259];v258=1;end if (v258==1) then v261=v98[v259 + 2 ];if (v261>0) then if (v260>v98[v259 + 1 ]) then v92=v100[3];else v98[v259 + 3 ]=v260;end elseif (v260<v98[v259 + 1 ]) then v92=v100[3];else v98[v259 + 3 ]=v260;end break;end end end elseif (v101<=38) then if (v101<=36) then local v165=0;local v166;while true do if (v165==0) then v166=v100[2 + 0 ];do return v21(v98,v166,v93);end break;end end elseif (v101>37) then v98[v100[2]]={};else local v263=0;local v264;local v265;local v266;local v267;while true do if (v263==2) then for v398=v264,v93 do v267=v267 + 1 ;v98[v398]=v265[v267];end break;end if (v263==1) then v93=(v266 + v264) -1 ;v267=0;v263=2;end if (v263==0) then v264=v100[2];v265,v266=v91(v98[v264](v21(v98,v264 + 1 ,v100[3])));v263=1;end end end elseif (v101<=39) then v98[v100[2]]={};elseif (v101>40) then v98[v100[2]]=v98[v100[3]];else v98[v100[999 -(915 + 82) ]]=v74[v100[3]];end elseif (v101<=62) then if (v101<=(144 -93)) then if (v101<=46) then if (v101<=43) then if (v101>(25 + 17)) then v98[v100[2]]=v98[v100[3]] + v100[4] ;else v98[v100[2]]=v100[3] + v98[v100[4]] ;end elseif (v101<=44) then local v170=0;local v171;local v172;local v173;local v174;while true do if (v170==1) then v93=(v173 + v171) -1 ;v174=0;v170=2;end if (v170==0) then v171=v100[2];v172,v173=v91(v98[v171](v21(v98,v171 + 1 ,v100[3])));v170=1;end if (v170==2) then for v344=v171,v93 do v174=v174 + 1 ;v98[v344]=v172[v174];end break;end end elseif (v101>45) then local v272=v100[2];local v273,v274=v91(v98[v272](v21(v98,v272 + 1 ,v93)));v93=(v274 + v272) -1 ;local v275=0;for v318=v272,v93 do local v319=0;while true do if (0==v319) then v275=v275 + 1 ;v98[v318]=v273[v275];break;end end end else local v276=0;local v277;local v278;local v279;local v280;while true do if (v276==0) then v277=v100[2];v278,v279=v91(v98[v277](v98[v277 + (1 -0) ]));v276=1;end if (v276==2) then for v403=v277,v93 do local v404=0;while true do if (v404==0) then v280=v280 + 1 ;v98[v403]=v278[v280];break;end end end break;end if (v276==1) then v93=(v279 + v277) -1 ;v280=0;v276=2;end end end elseif (v101<=48) then if (v101==47) then v98[v100[2]]=v98[v100[3]][v98[v100[4]]];else local v177=0;local v178;local v179;local v180;while true do if (v177==0) then v178=v100[1189 -(1069 + 118) ];v179=v98[v178 + 2 ];v177=1;end if (v177==1) then v180=v98[v178] + v179 ;v98[v178]=v180;v177=2;end if (v177==2) then if (v179>0) then if (v180<=v98[v178 + (2 -1) ]) then v92=v100[3];v98[v178 + (6 -3) ]=v180;end elseif (v180>=v98[v178 + 1 ]) then local v416=0;while true do if (v416==0) then v92=v100[3];v98[v178 + 1 + 2 ]=v180;break;end end end break;end end end elseif (v101<=49) then v98[v100[2]]=v98[v100[3]][v98[v100[4]]];elseif (v101>(88 -38)) then v98[v100[2 + 0 ]]= #v98[v100[3]];else local v282=v100[2];v98[v282](v21(v98,v282 + 1 ,v93));end elseif (v101<=56) then if (v101<=53) then if (v101>52) then local v183=0;local v184;local v185;local v186;while true do if (v183==1) then v186={};v185=v18({},{[v7("\74\69\115\192\113\127\98","\174\21\26\26")]=function(v347,v348) local v349=0;local v350;while true do if (v349==0) then v350=v186[v348];return v350[1][v350[2]];end end end,[v7("\8\158\186\21\32\168\186\20\50\185","\112\87\193\212")]=function(v351,v352,v353) local v354=v186[v352];v354[1][v354[2]]=v353;end});v183=2;end if (v183==2) then for v356=1,v100[4] do local v357=0;local v358;while true do if (v357==1) then if (v358[1]==41) then v186[v356-1 ]={v98,v358[3]};else v186[v356-1 ]={v74,v358[3]};end v97[ #v97 + 1 ]=v186;break;end if (0==v357) then v92=v92 + 1 ;v358=v88[v92];v357=1;end end end v98[v100[2]]=v40(v184,v185,v75);break;end if (v183==0) then v184=v89[v100[3]];v185=nil;v183=1;end end else local v187=v100[20 -(10 + 8) ];local v188=v100[4];local v189=v187 + 2 ;local v190={v98[v187](v98[v187 + 1 ],v98[v189])};for v213=1,v188 do v98[v189 + v213 ]=v190[v213];end local v191=v190[1];if v191 then v98[v189]=v191;v92=v100[3];else v92=v92 + 1 ;end end elseif (v101<=54) then for v216=v100[2],v100[3] do v98[v216]=nil;end elseif (v101==55) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;else v98[v100[2]]= #v98[v100[3]];end elseif (v101<=59) then if (v101<=57) then local v192=0;local v193;local v194;while true do if (v192==1) then v98[v193 + 1 ]=v194;v98[v193]=v194[v100[4]];break;end if (v192==0) then v193=v100[2];v194=v98[v100[3]];v192=1;end end elseif (v101>58) then do return;end else v92=v100[11 -8 ];end elseif (v101<=60) then v98[v100[2]]=v100[3];elseif (v101==(503 -(416 + 26))) then v98[v100[2]]();else local v288=0;local v289;local v290;local v291;while true do if (v288==0) then v289=v100[2];v290={v98[v289](v21(v98,v289 + 1 ,v93))};v288=1;end if (v288==1) then v291=0;for v405=v289,v100[4] do v291=v291 + 1 ;v98[v405]=v290[v291];end break;end end end elseif (v101<=(229 -157)) then if (v101<=67) then if (v101<=64) then if (v101>63) then v98[v100[2]]=v75[v100[3]];elseif  not v98[v100[2]] then v92=v92 + 1 + 0 ;else v92=v100[3];end elseif (v101<=65) then local v199=0;local v200;while true do if (v199==0) then v200=v100[2];v98[v200]=v98[v200](v21(v98,v200 + (1 -0) ,v93));break;end end elseif (v101>66) then do return v98[v100[2]]();end else do return v98[v100[2]]();end end elseif (v101<=69) then if (v101>68) then local v201=0;local v202;while true do if (v201==0) then v202=v100[2];v98[v202]=v98[v202](v21(v98,v202 + 1 ,v93));break;end end else v98[v100[2]][v100[3]]=v98[v100[4]];end elseif (v101<=70) then v92=v100[3];elseif (v101>71) then local v293=v100[2];local v294,v295=v91(v98[v293](v98[v293 + 1 ]));v93=(v295 + v293) -(439 -(145 + 293)) ;local v296=430 -(44 + 386) ;for v334=v293,v93 do local v335=0;while true do if (v335==0) then v296=v296 + 1 ;v98[v334]=v294[v296];break;end end end elseif (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=77) then if (v101<=74) then if (v101>73) then v98[v100[1488 -(998 + 488) ]]=v98[v100[3]]%v98[v100[4]] ;else local v207=0;local v208;while true do if (v207==0) then v208=v100[2];v98[v208](v98[v208 + 1 ]);break;end end end elseif (v101<=(24 + 51)) then if (v98[v100[2 + 0 ]]~=v98[v100[776 -(201 + 571) ]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>76) then local v298=0;local v299;while true do if (v298==0) then v299=v100[2];v98[v299]=v98[v299](v21(v98,v299 + 1 ,v100[3]));break;end end else local v300=0;local v301;local v302;while true do if (v300==0) then v301=v100[2];v302=v98[v301];v300=1;end if (v300==1) then for v410=v301 + 1 ,v93 do v15(v302,v98[v410]);end break;end end end elseif (v101<=80) then if (v101<=78) then for v218=v100[2],v100[3] do v98[v218]=nil;end elseif (v101>79) then v98[v100[2]]=v98[v100[3]];else local v305=v100[1140 -(116 + 1022) ];local v306=v100[16 -12 ];local v307=v305 + 2 ;local v308={v98[v305](v98[v305 + 1 ],v98[v307])};for v337=1,v306 do v98[v307 + v337 ]=v308[v337];end local v309=v308[1];if v309 then v98[v307]=v309;v92=v100[2 + 1 ];else v92=v92 + 1 ;end end elseif (v101<=81) then local v209=0;local v210;local v211;local v212;while true do if (0==v209) then v210=v89[v100[3]];v211=nil;v209=1;end if (v209==1) then v212={};v211=v18({},{[v7("\148\75\182\177\65\68\202","\67\203\20\223\223\37\33\178")]=function(v362,v363) local v364=v212[v363];return v364[1][v364[2]];end,[v7("\151\123\222\179\162\239\205\137\173\92","\237\200\36\176\214\213\134\163")]=function(v365,v366,v367) local v368=0;local v369;while true do if (v368==0) then v369=v212[v366];v369[1][v369[2]]=v367;break;end end end});v209=2;end if (v209==2) then for v370=3 -2 ,v100[14 -10 ] do local v371=0;local v372;while true do if (v371==1) then if (v372[1]==41) then v212[v370-1 ]={v98,v372[3]};else v212[v370-(860 -(814 + 45)) ]={v74,v372[3]};end v97[ #v97 + 1 ]=v212;break;end if (v371==0) then v92=v92 + 1 ;v372=v88[v92];v371=1;end end end v98[v100[2]]=v40(v210,v211,v75);break;end end elseif (v101>82) then if (v100[2]==v98[v100[1 + 3 ]]) then v92=v92 + 1 ;else v92=v100[3];end else local v310=0;local v311;local v312;while true do if (v310==0) then v311=v100[2];v312=v98[v311];v310=1;end if (v310==1) then for v411=v311 + 1 ,v93 do v15(v312,v98[v411]);end break;end end end v92=v92 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);







